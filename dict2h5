#!/usr/bin/python

import h5py
import pickle


class Dict2Hdf:

    def createdataset(self, group, key_name, value):
        try:
            group.create_dataset(key_name, data=value)
        except:
            print("data in key '" + key_name + "' could not be extracted")    

    def dict2hdf5(self, indict, outfilename = 'default.hdf5'):
        """
        Create hdf5 file from a python dictionary. Convert a python dictionary 
        to a hdf5 organization. This method accepts four levels of dictionaries 
        inside the main dictionary.
        outfilename: indicate the ouput hdf5 filename.
        indict: input dictionary to be converted.
        """

        if len(indict) == 1:
            key0 = indict.keys()[0]
            val0 = indict[key0]
            outfilename = key0 + ".hdf5"
            f = h5py.File(outfilename, "w")
            for k1, v1 in val0.items():
                if type(v1) is not dict:
                    self.createdataset(f, k1, v1)  
                else:
                    grp2 = f.create_group(k1) 
                    for k2, v2 in v1.items():
                        if type(v2) is not dict:
                            self.createdataset(grp2, k2, v2)  
                        else:
                            grp3 = grp2.create_group(k2)       
                            for k3, v3 in v2.items():
                                if type(v3) is not dict:
                                    self.createdataset(grp3, k3, v3)

        elif len(indict) > 1:
            f = h5py.File(outfilename, "w")
            for key0, val0 in indict.items():
                if type(val0) is not dict:
                    self.createdataset(f, key0, val0)   
                else:
                    grp1 = f.create_group(key0) 
                    for k1, v1 in val0.items():
                        if type(v1) is not dict:
                            self.createdataset(grp1, k1, v1)  
                        else:
                            grp2 = grp1.create_group(k1) 
                            for k2, v2 in v1.items():
                                if type(v2) is not dict:
                                    self.createdataset(grp2, k2, v2)  
                                else:
                                    grp3 = grp2.create_group(k2)       
                                    for k3, v3 in v2.items():
                                        if type(v3) is not dict:
                                            self.createdataset(grp3, k3, v3)    

        f.close()


if __name__ == "__main__":
    dict2hdf_obj = Dict2Hdf()
    psf_dict = pickle.load(open("psf_library_Mistral.p", "rb"))
    dict2hdf_obj.dict2hdf5(psf_dict)






